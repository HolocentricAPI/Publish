--- 
basePath: ""
host: baseuri.com
info: 
  description: "Holocentric Modelpedia now supports an XML-based API that is based on OData style interface and data structure. This API can be used by third party applciations to retreive data from Modelpedia. The API supports a single RESTful service that can return the schema of a queried library. Additionally you can also retreive related items and relationships for a queried item type. API access is performed over HTTPS and accessed from a variable URI based on client installations and libraries. This document is aimed at helping you work with this API functionality in Modelpedia."
  title: "Test Full"
  version: holo
parameters: 
  $count: 
    default: true
    description: "This option is used when you want to retreive a count of the number of items that are available for a specified item type. The count value will be provided within the header of the API response."
    in: query
    name: $count
    required: false
    type: boolean
  $select: 
    description: "This parameter can be used to rereive specific properties of an item type."
    in: query
    name: $select
    required: false
    type: string
  $skip: 
    description: "This is a paging option to skip the specified number of items in the list. e.g. $skip=50 will skip the first 50 items in the list and return results from the 51st item onwards."
    in: query
    name: $skip
    required: false
    type: integer
  $top: 
    description: |-
        This is a paging option to return the specified number of items from the top of the list. 
        e.g. $top=50 will return the first 50 items in the list.
    in: query
    name: $top
    required: false
    type: integer
  Authorization: 
    in: header
    name: Authorization
    required: true
    type: string
  content-type: 
    in: header
    name: content-type
    required: true
    type: string
  $filter: 
    description: "Filter out the item type using the 'isOf' option. Only the 'isOf' option is supported for item type checking."
    in: query
    name: $filter
    required: false
    type: string
paths: 
  ? "/{server_url}/api/token"
  : 
    post: 
      consumes: 
        - application/x-www-form-urlencoded
      description: |-
          This API request is used to obtain an access token for authorization purposes. 
          Prior to making any API requests, you need to obtain an access token that you can then use for all subsequent API requests.
      operationId: obtain-access-token
      parameters: 
        - 
          description: "URL of the Modelpedia server."
          in: path
          name: server_url
          required: true
          type: string
        - 
          description: "Use the value 'password' since you will be obtaining an access token using the your password credentials."
          in: query
          name: grant_type
          required: true
          type: string
        - 
          description: "The account username for which you want to obtain an access token."
          in: query
          name: username
          required: true
          type: string
        - 
          description: "The account password for which you want to obtain an access token."
          in: query
          name: password
          required: true
          type: string
        - 
          in: formData
          required: false
          type: file
      responses: 
        ? "200"
        : 
          description: "Upon successful submission of the API request, an XML response will be returned with the access token, token type issued and expiry time in milliseconds."
          schema: 
            properties: 
              access_token: 
                example: mUZrfE9MJySA1YTyGl9HsMjIypWNtl9jqjpfqxMKakdV00Fkh6C38gZkztrtCzWS
                type: string
              expires_in: 
                description: "Token validity duration in milliseconds."
                example: 28799
                format: int32
                type: integer
              token_type: 
                example: Bearer
                type: string
            required: 
              - access_token
              - expires_in
              - token_type
            type: object
      summary: "Obtain access token"
  ? "/{server_url}/api/{model_choice}/{model_uuid}/items"
  : 
    get: 
      description: "This API request will retreive item details relating to the specified item UUID. The item UUIDs of an item type can be obtained from the response returned when you invoke the [list items](speca://get-item-schema_status) API method."
      operationId: get-item-details-by-specifying-the-item-uuid-and-specific-model-version
      parameters: 
        - 
          description: "Modelpedia server URL."
          in: path
          name: server_url
          required: true
          type: string
        - 
          in: path
          name: model_choice
          required: true
          type: string
        - 
          description: "The UUID of the specific version of the model library."
          in: path
          name: model_uuid
          required: true
          type: string
        - 
          description: "The UUID/s of the item/s that you want to retreive. When retreiving more than one item, use a comma to sepaerate the UUIDs."
          in: query
          name: item_uuid
          required: true
          type: string
        - 
          $ref: "#/parameters/Authorization"
        - 
          $ref: "#/parameters/content-type"
      responses: 
        ? "401"
        : 
          $ref: "#/responses/401"
        authorization_denied: 
          $ref: "#/responses/authorization_denied"
        invalid_property: 
          $ref: "#/responses/invalid_property"
        invalid_model: 
          $ref: "#/responses/invalid_model"
        not_found: 
          $ref: "#/responses/not_found"
        requires_initialization: 
          $ref: "#/responses/requires_initialization"
        unauthorized: 
          $ref: "#/responses/unauthorized"
      summary: "Get item details by specifying the item using library model UUID"
  ? "/{server_url}/api/{model_choice}/{model_uuid}/items/schema"
  : 
    get: 
      description: "This is to query the schema of a model library using the library UUID. When using the library UUID, you are required to provide the model choice. (i.e. LatestDraft, LatestProposed or LatestFinal)"
      operationId: get-item-schema_status
      parameters: 
        - 
          description: "Modelpedia server URL."
          in: path
          name: server_url
          required: true
          type: string
        - 
          description: "Specifies if you want to retreive the draft, proposed or final version of the published library."
          in: path
          name: model_choice
          required: true
          type: string
        - 
          description: "The published library uuid."
          in: path
          name: model_uuid
          required: true
          type: string
        - 
          $ref: "#/parameters/Authorization"
        - 
          $ref: "#/parameters/content-type"
      responses: 
        ? "200"
        : 
          description: OK
        401: 
          $ref: "#/responses/401"
        authorization_denied: 
          $ref: "#/responses/authorization_denied"
        invalid_model: 
          $ref: "#/responses/invalid_model"
        not_found: 
          $ref: "#/responses/not_found"
        requires_initialization: 
          $ref: "#/responses/requires_initialization"
        unauthorized: 
          $ref: "#/responses/unauthorized"
      summary: "Get item schema using library model UUID"
  ? "/{server_url}/api/{model_choice}/{model_uuid}/items?$filter=isof(''item_type'')"
  : 
    get: 
      description: |-
          This API request will retreive all items relating to the specified item type. The item type can be filtered out using the $filter paramater and the 'isOf' option. 
          e.g., filter=isof('Business Rule') will list out all items that are listed under item type 'Business Rule'.
      operationId: list-items-of-a-specified-item-type-using-library-model-uuid
      parameters: 
        - 
          description: "Modelpedia server URL."
          in: path
          name: server_url
          required: true
          type: string
        - 
          description: "Specifies if you want to retreive the draft, proposed or final version of the library."
          in: path
          name: model_choice
          required: true
          type: string
        - 
          description: "The UUID of the specific version of the model library."
          in: path
          name: model_uuid
          required: true
          type: string
        - 
          $ref: "#/parameters/$filter"
        - 
          $ref: "#/parameters/$top"
        - 
          $ref: "#/parameters/$skip"
        - 
          $ref: "#/parameters/$count"
        - 
          $ref: "#/parameters/$select"
        - 
          $ref: "#/parameters/Authorization"
        - 
          $ref: "#/parameters/content-type"
      produces: 
        - application/xml
      responses: 
        ? "200"
        : 
          description: OK
          schema: 
            properties: 
              uuid: 
                description: "UUID of the item"
                type: string
            required: 
              - uuid
            type: object
        ? "401"
        : 
          $ref: "#/responses/401"
        authorization_denied: 
          $ref: "#/responses/authorization_denied"
        invalid_property: 
          $ref: "#/responses/invalid_property"
        invalid_model: 
          $ref: "#/responses/invalid_model"
        not_found: 
          $ref: "#/responses/not_found"
        requires_initialization: 
          $ref: "#/responses/requires_initialization"
        unauthorized: 
          $ref: "#/responses/unauthorized"
      summary: "List items of a specified item type using library model UUID"
  ? "/{server_url}/api/{model_uuid}/items"
  : 
    get: 
      description: "This API request will retreive item details relating to the specified item UUID. The item UUIDs of an item type can be obtained from the response returned when you invoke the [list items](speca://get-item-schema_status) API method."
      operationId: list-item-of-a-specified-uuid
      parameters: 
        - 
          description: "Modelpedia server URL."
          in: path
          name: server_url
          required: true
          type: string
        - 
          description: "The UUID of the specific version of the model library."
          in: path
          name: model_uuid
          required: true
          type: string
        - 
          description: "The UUID/s of the item/s that you want to retreive. When retreiving more than one item, use a comma to sepaerate the UUIDs."
          in: query
          name: item_uuid
          required: true
          type: string
        - 
          $ref: "#/parameters/Authorization"
        - 
          $ref: "#/parameters/content-type"
      responses: 
        ? "401"
        : 
          $ref: "#/responses/401"
        authorization_denied: 
          $ref: "#/responses/authorization_denied"
        invalid_property: 
          $ref: "#/responses/invalid_property"
        invalid_model: 
          $ref: "#/responses/invalid_model"
        not_found: 
          $ref: "#/responses/not_found"
        requires_initialization: 
          $ref: "#/responses/requires_initialization"
        unauthorized: 
          $ref: "#/responses/unauthorized"
      summary: "Get item details by specifying the item UUID"
  ? "/{server_url}/api/{model_uuid}/items/schema"
  : 
    get: 
      description: "This is used to query the items schema when you provide the UUID of the specific version of a published model library."
      operationId: get-item-schema
      parameters: 
        - 
          description: "Modelpedia server URL."
          in: path
          name: server_url
          required: true
          type: string
        - 
          description: "The UUID of the specific version of the model library."
          in: path
          name: model_uuid
          required: true
          type: string
        - 
          $ref: "#/parameters/Authorization"
        - 
          $ref: "#/parameters/content-type"
      responses: 
        ? "401"
        : 
          $ref: "#/responses/401"
        authorization_denied: 
          $ref: "#/responses/authorization_denied"
        invalid_model: 
          $ref: "#/responses/invalid_model"
        not_found: 
          $ref: "#/responses/not_found"
        requires_initialization: 
          $ref: "#/responses/requires_initialization"
        unauthorized: 
          $ref: "#/responses/unauthorized"
      summary: "Get item schema using specific model version UUID"
  ? "/{server_url}/api/{model_uuid}/items?$filter=isof(''item_type'')"
  : 
    get: 
      description: |-
          This API request will retreive all items relating to the specified item type. The item type can be filtered out using the $filter paramater and the 'isOf' option. 
          e.g., filter=isof('Business Rule') will list out all items that are listed under item type 'Business Rule'.
      operationId: list-items-of-a-specified-type
      parameters: 
        - 
          description: "Modelpedia server URL."
          in: path
          name: server_url
          required: true
          type: string
        - 
          description: "The UUID of the specific version of the model library."
          in: path
          name: model_uuid
          required: true
          type: string
        - 
          $ref: "#/parameters/$filter"
        - 
          $ref: "#/parameters/$top"
        - 
          $ref: "#/parameters/$skip"
        - 
          $ref: "#/parameters/$count"
        - 
          $ref: "#/parameters/$select"
        - 
          $ref: "#/parameters/Authorization"
        - 
          $ref: "#/parameters/content-type"
      produces: 
        - application/xml
      responses: 
        ? "200"
        : 
          description: OK
          schema: 
            properties: 
              uuid: 
                description: "UUID of the item"
                type: string
            required: 
              - uuid
            type: object
        ? "401"
        : 
          $ref: "#/responses/401"
        authorization_denied: 
          $ref: "#/responses/authorization_denied"
        invalid_property: 
          $ref: "#/responses/invalid_property"
        invalid_model: 
          $ref: "#/responses/invalid_model"
        not_found: 
          $ref: "#/responses/not_found"
        requires_initialization: 
          $ref: "#/responses/requires_initialization"
        unauthorized: 
          $ref: "#/responses/unauthorized"
      summary: "List items of a specified item type"
responses: 
  401: 
    description: |-
        Unauthorized: Access is denied due to invalid credentials.
        
        This error response is returned due to any one of the following reasons:
        - No access token provided in the header of the API request
        - The access token provided in the API request is incorrect.
    name: "401 - Unauthorized"
  authorization_denied: 
    description: |-
        Authorization has been denied for this request. This error response is returned be due to any one of the following reasons:
        
         - Either the 'Repository Administrator' role or the 'API Client (Full Read)' role has not been assigned to the user invoking the API. The access token has expired (i.e. 8 hours have exceeded since the token was generated.)
         - The role 'API Client (Full Read)' has been revoked from the user and the 5 minutes cache time period for the access token has also expired.
         - User is attempting to access a library that he/she does not have access.
         - Access token was generated for one server and now being used for accessing a model library on another server.
    name: "401 - Authorization denied"
  invalid_model: 
    description: |-
        The requested model is invalid.
        
        This error response is returned due to any one of the following reasons:
        
         - The model library is not published.
         - Model choice is not provided along with the model library UUID when invoking an API request for a published model.
         - The model library or the specific version UUID provided is incorrect.
         - The library being queried has been publishes with RMU (Revision Mark Up) enabled.
    name: "404 - Invalid Model"
  invalid_property: 
    description: |-
        The specified property names are not valid.
        
        This error response is returned due any one of the following reasons:
        - Invalid property name is entered with the `$select` parameter.
        - Invalid item type name is provided with the `$filter` parameter.
    name: "400 - Invalid Property"
  not_found: 
    description: |-
        Not found.
        
        This error response is returned when you make an API request to retreive the schema or items of a published library but you have a typo in your API URL.
    name: "404 - Not found"
  requires_initialization: 
    description: "The requested model requires initialization.This error response is returned when you attempt to make an API on a published model that is not initialized or is currently being initialized."
    name: "404 - Requires Initialization"
  server_error: 
    description: |-
        An internal server error occured. 
        
        This error response is returned due to any one of the following reasons:
         - The API license has not been uploaded to the server.
         - The API server license has expired.
         - SSL certificate has not been installed for the server.
    name: "500 - Server Error"
  unauthorized: 
    description: |-
        Authorization has been denied for this request. User host address (IP) mismatch.
        
        This error response is returned when the access token was generated using one IP address and now being used for invoking an API request from a different IP address.
    name: "400 - Unauthorized"
schemes: 
  - http
swagger: "2.0"
